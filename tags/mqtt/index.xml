<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MQTT on Standing on the Shoulder of Giants</title><link>https://www.jonathanlin.top/tags/mqtt/</link><description>Recent content in MQTT on Standing on the Shoulder of Giants</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © {year} Jonathan Lin. All rights reserved.</copyright><lastBuildDate>Mon, 20 Mar 2023 09:13:10 +0800</lastBuildDate><atom:link href="https://www.jonathanlin.top/tags/mqtt/index.xml" rel="self" type="application/rss+xml"/><item><title>MQTT QoS和协议流程</title><link>https://www.jonathanlin.top/posts/mqtt-note-04/</link><pubDate>Mon, 20 Mar 2023 09:13:10 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mqtt-note-04/</guid><description>
&lt;p>一些容易搞混的概念：&lt;/p>
&lt;ol>
&lt;li>QoS是发送者和接受者之间的协议，而不是Publisher和Subscriber之间的协定，Subscriber订阅到的消息的QoS和Publisher没有直接关系&lt;/li>
&lt;li>Subscriber订阅到的消息的QoS：Publisher发布消息的Broker的QoS为QoSA，Subscriber从Broker订阅消息的QoS为QoSB，取QoSA和QoSB这二者的最小值&lt;/li>
&lt;/ol>
&lt;h3 id="qos-0最多分发一次">QoS 0：最多分发一次&lt;/h3>
&lt;p>消息的分发依赖于底层网络的能力。接收者不会发送响应，发送者也不会重试。消息可能送达一次也可能根本没送达。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230320091231776.png" alt="image-20230320091231776">&lt;/p>
&lt;h3 id="qos1至少分发一次">QoS1：至少分发一次&lt;/h3>
&lt;p>服务质量确保消息至少送达一次。QoS 1 的 PUBLISH 报文的可变报头中包含一个&lt;strong>报文标识符&lt;/strong>，需要PUBACK 报文确认。&lt;strong>QoS1的情况下，接收端收到的消息可能会重复。&lt;/strong>&lt;/p>
&lt;p>对于&lt;strong>发送者&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>每次发送新的应用消息都必须分配一个未使用的报文标识符&lt;/li>
&lt;li>发送的 PUBLISH 报文必须包含报文标识符且 QoS 等于 1，DUP 等于 0&lt;/li>
&lt;li>必须将这个 PUBLISH 报文看作是 未确认的 ，直到从接收者那收到对应的 PUBACK 报文&lt;/li>
&lt;li>一旦发送者收到 PUBACK 报文，这个报文标识符就可以重用&lt;/li>
&lt;li>允许发送者在等待确认时使用不同的报文标识符发送后续的 PUBLISH 报文&lt;/li>
&lt;/ul>
&lt;p>对于&lt;strong>接收者&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>响应的 PUBACK 报文必须包含一个&lt;strong>报文标识符&lt;/strong>，这个标识符来自接收到的、已经接受所有权的 PUBLISH 报文&lt;/li>
&lt;li>发送了 PUBACK 报文之后，接收者必须将任何包含相同报文标识符的入站 PUBLISH 报文当作一 个新的消息，并忽略它的 DUP 标志的值&lt;/li>
&lt;li>不要求接收者在发送 PUBACK 之前完整分发应用消息。原来的发送者收到 PUBACK 报文之后， 应用消息的所有权就会转移给这个接收者&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230319221038182.png" alt="image-20230319221038182">&lt;/p>
&lt;h4 id="为什么qos1可能导致消息重复">为什么QoS1可能导致消息重复？&lt;/h4>
&lt;p>来看看以下两种情况，如下图所示：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>左边&lt;/strong>：PublishAck传输失败了，因此发送端重发了这个报文（下图左边的3），Msg Id也就是报文标识符保持一致，DUP变为1表示消息重传。实际上，这里面只是一个QoS1的消息来回&lt;/li>
&lt;li>&lt;strong>右边&lt;/strong>：在完成了一次QoS1的消息交互后，报文标识符即可释放。后续的消息可以复用已释放的消息标识符，然后再发送Publish报文的时候，因为某种原因失败了发生了重传（下图右边的4），这是DUP变为1。实际上，这里面是两个QoS1消息的的来回&lt;/li>
&lt;/ul>
&lt;p>这两种情况，Msg Id一致，且DUP均为1，同时Payload一致。对于接收方来说，无法区分是重复消息（左边步骤3）还是新消息（右边的4）。综合来看，只能让接收方将这些 PUBLISH 报文都当作全新的消息来处理。因此当我们使用 QoS 1 时，消息的重复在协议层面上是无法避免的。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230317165852880.png" alt="image-20230317165852880">&lt;/p>
&lt;h3 id="qos-2-仅分发一次">QoS 2: 仅分发一次&lt;/h3></description></item><item><title>MQTT控制报文</title><link>https://www.jonathanlin.top/posts/mqtt-note-03/</link><pubDate>Wed, 08 Mar 2023 16:51:33 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mqtt-note-03/</guid><description>
&lt;h3 id="控制报文结构">控制报文结构&lt;/h3>
&lt;p>MQTT 控制报文由三部分组成，按照 下图描述的顺序:&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20220224155932690.png" alt="image-20220224155932690">&lt;/p>
&lt;h3 id="固定报头">固定报头&lt;/h3>
&lt;p>每个 MQTT 控制报文都包含一个固定报头。下图描述了固定报头的格式，固定报头的第一字节是固定的，用于表示控制报文类型和标志位，不再赘述请参考 &lt;a href="http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html">MQTT协议规范&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20220224155952188.png" alt="image-20220224155952188">&lt;/p>
&lt;p>紧接的是&lt;strong>剩余长度&lt;/strong>这里重点记录一下剩余长度的含义以及计算方式。&lt;/p>
&lt;h3 id="剩余长度">剩余长度&lt;/h3>
&lt;p>**剩余长度(Remaining Length)**表示当前报文剩余部分的字节数，&lt;strong>包括可变报头(Variable header)和负载(Payload)的数据&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>剩余长度字段使用一个变长度编码方案，从byte2开始，最多可达4个字节，也就是说可能用byte2~byte5来编码表示剩余长度&lt;/li>
&lt;li>对于小于128的值使用单字节编码，大于128的值使用低7位编码数据，最高位指示后续是否有更多的字节&lt;/li>
&lt;/ul>
&lt;p>展开来说：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>byte2 ~ byte 5&lt;/th>
&lt;th>二进制&lt;/th>
&lt;th>解释&lt;/th>
&lt;th>剩余长度最小值&lt;/th>
&lt;th>剩余长度最大值&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>byte2&lt;/td>
&lt;td>0XXX XXXX&lt;/td>
&lt;td>高位为0，仅byte2用于编码剩余长度&lt;/td>
&lt;td>0 (0x00)&lt;/td>
&lt;td>127 (0x7F)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>byte2byte3&lt;/td>
&lt;td>1XXX XXXX 0XXX XXXX&lt;/td>
&lt;td>高位为1，byte2和byte3用于编码剩余长度&lt;/td>
&lt;td>128 (0x80, 0x01)&lt;/td>
&lt;td>16 383 (0xFF, 0x7F)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>byte2byte3byte4&lt;/td>
&lt;td>1XXX XXXX 1XXX XXXX 0XXX XXXX&lt;/td>
&lt;td>byte2和byte3的高位为1，byte2，byte3和byte4用于编码剩余长度&lt;/td>
&lt;td>16384 (0x80, 0x80, 0x01)&lt;/td>
&lt;td>2097151 (0xFF, 0xFF, 0x7F)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Byte2byte3byte4byte5&lt;/td>
&lt;td>1XXX XXXX 1XXX XXXX 1XXX XXXX 0XXX XXXX&lt;/td>
&lt;td>byte2，byte3和byte4的高位为1，byte2，byte3，byte4和byte5用于编码剩余长度&lt;/td>
&lt;td>2097152 (0x80, 0x80, 0x80, 0x01)&lt;/td>
&lt;td>268435455 (0xFF, 0xFF, 0xFF, 0x7F)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>剩余长度不包括用于编码剩余长度字段本身的字节数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>剩余长度单位是字节&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于byte2~byte5，计算剩余长度数值的时候，遵循以下的算法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">byte5&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="err">进制&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">byte4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="err">进制&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">byte3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="err">进制&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nf">byte2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="err">进制&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以剩余长度最大值0xFF, 0xFF, 0xFF, 0x7F，计算过程如下：&lt;/p>
&lt;ul>
&lt;li>0xFF - 对于byte2~byte5，最高位是标记位，不能参与计算，去掉最高位就是0X7F（0111 1111），对应十进制127&lt;/li>
&lt;li>公式里的 bytex(16进制)&amp;amp;~(0x80)目的就是去掉最高位标记位&lt;/li>
&lt;li>套用上面的公式：&lt;code>127*128^3 + 127*128^2 + 127*128 + 127 = 268435455 bytes = 256MB&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="mqtt控制报文">MQTT控制报文&lt;/h3>
&lt;p>可变报头位于剩余长度和Payload之间。可变不是可选（optional）的意思，可变报头的内容根据报文类型的不同而不同。具体取决于报文类型，有的类型包含可变报头，有的没有。&lt;/p>
&lt;h4 id="connect---连接服务端broker">CONNECT - 连接服务端（Broker）&lt;/h4>
&lt;p>&lt;strong>可变报头&lt;/strong>&lt;/p>
&lt;p>包括：协议名长度（Protocol Name Length）、 协议名（Protocol Name)、协议级别（Protocol Level/Version），连接标志（Connection Flags）和保持连接（Keep Alive）&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230224171541298.png" alt="image-20230224171541298">&lt;/p>
&lt;blockquote>
&lt;p>由于v3.1.1版本的Version对应的值是4，这也是MQTT5的由来&lt;/p>
&lt;/blockquote>
&lt;p>连接标志位（Connection Flags）各bit含义如下：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230308142402425.png" alt="image-20230308142402425">&lt;/p>
&lt;blockquote>
&lt;p>1 - Clean Session：会话清除标志位。当设置为0时，服务端必须基于当前会话（通过客户端标识符识别）的状态恢复与客户端的通信，即持久化会话。持久化会话只对QoS为1或者2 的消息有效，客户端和服务端需要将QoS1和2的消息保存为会话的一部分；当设置为1时，客户端和服务端必须丢弃之前任何会话并开始一个新的会话 (&lt;strong>保留消息不是服务端会话状态的一部分，会话终止时不能删除保留信息&lt;/strong>)&lt;/p>
&lt;p>2 - Will Flag：遗嘱标志。这个是和Will Retain和Will QoS一起使用的。当遗嘱标志位0时，这几个都要置0，表明网络断开的时候不能发送医嘱信息；当遗嘱标志位设置为1时&lt;/p>
&lt;p>3/4 - Will QoS：遗嘱消息QoS，值为0,1和2&lt;/p>
&lt;p>5 - Will Retain：遗嘱保留&lt;/p>
&lt;p>6 - Password Flag：密码标志，标识有效核载中是否包含用户密码&lt;/p>
&lt;p>7 - User Name Flag：用户名标志，标识有效核载中是否包含用户名&lt;/p>
&lt;/blockquote>
&lt;p>保持连接（Keep Alive）：以秒为单位的时间间隔，是指在客户端传输完成 一个控制报文的时刻到发送下一个报文的时刻，两者之间允许空闲的最大时间间隔&lt;/p>
&lt;p>&lt;strong>有效核载&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230308154242825.png" alt="image-20230308154242825">&lt;/p>
&lt;p>客户端标识符（Client ID）：客户端和服务器必须使用Client ID标识两者之间的MQTT会话状态&lt;/p>
&lt;p>遗嘱主题（Will Topic）：可变报头中的连接标志位中设置了Will Flag时，就必须设置遗嘱主题&lt;/p>
&lt;p>遗嘱消息（Will Message）：发布到遗嘱主题的消息&lt;/p>
&lt;p>用户名(User Name) | 密码（Password）：用于连接MQTT的Broker的用户名和密码&lt;/p>
&lt;h4 id="connack---确认连接请求">CONNACK - 确认连接请求&lt;/h4>
&lt;p>服务端发送给客户端的第一个报文必须是CONNACK&lt;/p>
&lt;p>&lt;strong>可变报头&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230308155504193.png" alt="image-20230308155504193">&lt;/p>
&lt;p>连接确认标志位（Acknowledge Flags）：总共一个字节，7~1位为保留位，值都为0。第零位也叫SP位，其值和ONNECT里的Clean Session有关&lt;/p>
&lt;ul>
&lt;li>如果Clean Session为1，那么每次连接都是新的会话，SP的值置为0&lt;/li>
&lt;li>如果Clean Session为0，服务根据客户端标识判断是否已经有该客户端会话，那么SP的值置为1，否则为0&lt;/li>
&lt;/ul>
&lt;p>连接返回码（Return Code）：连接返回码，用于标识连接成功与否。如果连接失败，如下表，根据该值判断连接失败的原因&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>值&lt;/strong>&lt;/th>
&lt;th>&lt;strong>返回码响应&lt;/strong>&lt;/th>
&lt;th>&lt;strong>描述&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>0x00连接已接受&lt;/td>
&lt;td>连接已被服务端接受&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>0x01连接已拒绝，不支持的协议版本&lt;/td>
&lt;td>服务端不支持客户端请求的MQTT协议级别&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>0x02连接已拒绝，不合格的客户端标识符&lt;/td>
&lt;td>客户端标识符是正确的UTF-8编码，但服务端不允许使用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>0x03连接已拒绝，服务端不可用&lt;/td>
&lt;td>网络连接已建立，但MQTT服务不可用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>0x04连接已拒绝，无效的用户名或密码&lt;/td>
&lt;td>用户名或密码的数据格式无效&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>0x05连接已拒绝，未授权&lt;/td>
&lt;td>客户端未被授权连接到此服务器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6-255&lt;/td>
&lt;td>&lt;/td>
&lt;td>保留&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>如果认为上表中的所有连接返回码都不太合适，那么服务端必须关闭网络连接，不需要发送 CONNACK 报文&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>有效核载&lt;/strong>&lt;/p>
&lt;p>无&lt;/p>
&lt;h4 id="disconnect---断开连接">DISCONNECT - 断开连接&lt;/h4>
&lt;p>客户端发送给服务端的最后一个控制报文，表示客户端正常断开连接。除了固定头以外，就不包含可变报头和有效负载&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/image-20230308164658138.png" alt="image-20230308164658138">&lt;/p></description></item><item><title>MQTT杂记</title><link>https://www.jonathanlin.top/posts/mqtt-note-01/</link><pubDate>Fri, 24 Feb 2023 21:23:09 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mqtt-note-01/</guid><description>
&lt;blockquote>
&lt;p>本文记录一些学些MQTT的过程中的重点和难点，学习材料包括：&lt;/p>
&lt;ul>
&lt;li>MQTT协议规范&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/schips/p/12266847.html">MQTT 协议学习： 总结 与 各种定义的速查表 - schips - 博客园 (cnblogs.com)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="角色">角色&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/jonlimx/blogs@main/image/mqtt-publish-subscribe-20220222113341799.png" alt="mqtt-publish-subscribe">&lt;/p>
&lt;ul>
&lt;li>MQTT Broker - 消息代理服务器&lt;/li>
&lt;li>MQTT Client - 消息发布者，通过QoS和Topic发布和订阅消息。MQTT Client可以同时是Publisher和Subscriber&lt;/li>
&lt;/ul>
&lt;h3 id="订阅">订阅&lt;/h3>
&lt;ul>
&lt;li>包含一个主题和QoS&lt;/li>
&lt;li>订阅与单个会话关联，一个会话可以包含一个或者多个订阅&lt;/li>
&lt;/ul>
&lt;h3 id="主题名和主题过滤器">主题名和主题过滤器&lt;/h3>
&lt;blockquote>
&lt;p>以下内容多来自MQTT3.1.1规范&lt;/p>
&lt;/blockquote>
&lt;p>MQTT Client通过主题发布和订阅消息。主题名可以有不同层级，通过&lt;code>/&lt;/code>划分。主题可能是管理员在服务端预先定义好的，也可能是服务端收到第一个订阅或使用那个主题名的应用消息时动态添加 的。&lt;strong>主题过滤器通过在主题名中引入通配符来匹配一个或者多个主题。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>注意：MQTT允许使用主题过滤器进行订阅（匹配）多个主题，但是不允许通过主题过滤器进行发布&lt;/p>
&lt;/blockquote>
&lt;h4 id="主题语义和用法">主题语义和用法&lt;/h4>
&lt;p>主题名和主题过滤器必须符合下列规则：&lt;/p>
&lt;ul>
&lt;li>所有的主题名和主题过滤器必须至少包含一个字符&lt;/li>
&lt;li>主题名和主题过滤器是区分大小写的&lt;/li>
&lt;li>主题名和主题过滤器可以包含空格&lt;/li>
&lt;li>主题名或主题过滤器以前置或后置斜杠&amp;quot;/&amp;quot;区分&lt;/li>
&lt;li>只包含斜杠&amp;quot;/&amp;quot;的主题名或主题过滤器是合法的&lt;/li>
&lt;li>主题名和主题过滤器不能包含空字符 (Unicode U+0000)&lt;/li>
&lt;li>主题名和主题过滤器是 UTF-8 编码字符串，它们不能超过 65535字节&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;/p>
&lt;ul>
&lt;li>&amp;quot;ACCOUNTS&amp;quot;和&amp;quot;Accounts&amp;quot;是不同的主题名&lt;/li>
&lt;li>&amp;quot;Accounts payable&amp;quot;是合法的主题名&lt;/li>
&lt;li>&amp;quot;/finance&amp;quot; 和 &amp;quot;finance&amp;quot;是不同的&lt;/li>
&lt;/ul>
&lt;h4 id="多层通配符">多层通配符&lt;code>#&lt;/code>&lt;/h4>
&lt;p>&lt;strong>&lt;code>#&lt;/code>&lt;/strong> 用于匹配主题中的任意层级的通配符。多层通配符必须是主题过滤器的最后一个字符，用于匹配它的父级和任意数量的子层级。例如，&amp;quot;sport/tennis/player1/#&amp;quot; 匹配下列主题名：&lt;/p>
&lt;ul>
&lt;li>&amp;quot;sport/tennis/player1&amp;quot;&lt;/li>
&lt;li>&amp;quot;sport/tennis/player1/ranking&amp;quot;&lt;/li>
&lt;li>&amp;quot;sport/tennis/player1/score/wimbledon&amp;quot;&lt;/li>
&lt;/ul>
&lt;p>一些其他的例子：&lt;/p>
&lt;ul>
&lt;li>&amp;quot;sport/#&amp;quot;也匹配单独的 &amp;quot;sport&amp;quot; ，因为&amp;quot;#&amp;quot; 包括它的父级&lt;/li>
&lt;li>&amp;quot;sport/tennis/#&amp;quot;也是有效的&lt;/li>
&lt;li>&amp;quot;sport/tennis#&amp;quot;是无效的&lt;/li>
&lt;li>&amp;quot;sport/tennis/#/ranking&amp;quot;是无效的&lt;/li>
&lt;/ul>
&lt;h4 id="单层通配符">单层通配符&lt;code>+&lt;/code>&lt;/h4>
&lt;p>在主题过滤器的任意层级都可以使用单层通配符，包括第一个和最后一个层级。它占据的是主题过滤器的整个层级，匹配的是特定的某个层级，&lt;strong>不能匹配子层级&lt;/strong>。例如，对于主题过滤器&amp;quot;sport/tennis/+&amp;quot;：&lt;/p>
&lt;ul>
&lt;li>&amp;quot;sport/tennis/player1&amp;quot; - 匹配&lt;/li>
&lt;li>&amp;quot;sport/tennis/player2&amp;quot; - 匹配&lt;/li>
&lt;li>&amp;quot;sport/tennis/player1/ranking&amp;quot; - 不匹配&lt;/li>
&lt;/ul>
&lt;p>一些其他的例子：&lt;/p>
&lt;ul>
&lt;li>&amp;quot;sport/+&amp;quot;不匹配 &amp;quot;sport&amp;quot;但是却匹配 &amp;quot;sport/&amp;quot;&lt;/li>
&lt;li>&amp;quot;+&amp;quot;是有效的&lt;/li>
&lt;li>&amp;quot;+/tennis/#&amp;quot;是有效的&lt;/li>
&lt;li>&amp;quot;sport+&amp;quot;是无效的&lt;/li>
&lt;li>&amp;quot;sport/+/player1&amp;quot;也是有效的&lt;/li>
&lt;li>&amp;quot;/finance&amp;quot;匹配 &amp;quot;+/+&amp;quot;和 &amp;quot;/+&amp;quot;，但是不匹配&amp;quot;+&amp;quot;&lt;/li>
&lt;/ul>
&lt;h4 id="以开头的主题">以&lt;code>$&lt;/code>开头的主题&lt;/h4>
&lt;p>服务端不能将&amp;quot;$&amp;quot;字符开头的主题名和&amp;quot;#/+&amp;quot;开头的主题过滤器匹配。&amp;quot;$&amp;quot;字符开头的主题名应该用于其他目的&lt;/p>
&lt;ul>
&lt;li>&amp;quot;$SYS/ &amp;quot;被广泛用作包含服务器特定信息或控制接口的主题的前缀&lt;/li>
&lt;li>应用不能使用 &amp;quot;$&amp;quot; 字符开头的主题 （也就是MQTT Client用于交互业务数据的主题）&lt;/li>
&lt;li>订阅 &amp;quot;#&amp;quot;的客户端不会收到任何发布到以&amp;quot;$&amp;quot;开头主题的消息&lt;/li>
&lt;li>订阅 &amp;quot;+/monitor/Clients&amp;quot; 的客户端不会收到任何发布到&amp;quot; $SYS/monitor/Clients&amp;quot;的消息&lt;/li>
&lt;li>订阅 &amp;quot;$SYS/#&amp;quot;的客户端会收到发布到以&amp;quot;$SYS/&amp;quot;开头主题的消息&lt;/li>
&lt;li>订阅 &amp;quot;$SYS/monitor/+&amp;quot;的客户端会收到发布到&amp;quot;$SYS/monitor/Clients&amp;quot;主题的消息&lt;/li>
&lt;li>如果客户端想同时接受以&amp;quot; $SYS/&amp;quot;开头主题的消息和不以&amp;quot;$&amp;quot; 开头主题的消息，它需要同时 订阅&amp;quot;#&amp;quot;和&amp;quot;$SYS/#&amp;quot;&lt;/li>
&lt;/ul></description></item><item><title>Mac下安装和配置Mosquitto</title><link>https://www.jonathanlin.top/posts/mqtt-note-02/</link><pubDate>Tue, 21 Feb 2023 16:18:26 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mqtt-note-02/</guid><description>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>Mac下通过&lt;code>brew&lt;/code>安装Mosquitto只需要一条简单的命令：&lt;code>brew install mosquitto&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nx">mosquitto&lt;/span> &lt;span class="nx">has&lt;/span> &lt;span class="nx">been&lt;/span> &lt;span class="nx">installed&lt;/span> &lt;span class="kd">with&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">configuration&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nx">You&lt;/span> &lt;span class="nx">can&lt;/span> &lt;span class="nx">make&lt;/span> &lt;span class="nx">changes&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">configuration&lt;/span> &lt;span class="nx">by&lt;/span> &lt;span class="nx">editing&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="err">/usr/local/etc/mosquitto/mosquitto.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="nx">To&lt;/span> &lt;span class="nx">restart&lt;/span> &lt;span class="nx">mosquitto&lt;/span> &lt;span class="nx">after&lt;/span> &lt;span class="nx">an&lt;/span> &lt;span class="nx">upgrade&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="nx">brew&lt;/span> &lt;span class="nx">services&lt;/span> &lt;span class="nx">restart&lt;/span> &lt;span class="nx">mosquitto&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="nx">Or&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">you&lt;/span> &lt;span class="nx">don&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="nx">t&lt;/span> &lt;span class="nx">want&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">need&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">background&lt;/span> &lt;span class="nx">service&lt;/span> &lt;span class="nx">you&lt;/span> &lt;span class="nx">can&lt;/span> &lt;span class="nx">just&lt;/span> &lt;span class="nx">run&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl"> &lt;span class="err">/usr/local/opt/mosquitto/sbin/mosquitto -c /usr/local/etc/mosquitto/mosquitto.conf&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后，默认情况下可执行文件和配置文件的位置如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ ~ ll /usr/local/bin &lt;span class="p">|&lt;/span> grep mosquitto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 47B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto_ctrl -&amp;gt; ../Cellar/mosquitto/2.0.10_1/bin/mosquitto_ctrl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 49B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto_passwd -&amp;gt; ../Cellar/mosquitto/2.0.10_1/bin/mosquitto_passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 46B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto_pub -&amp;gt; ../Cellar/mosquitto/2.0.10_1/bin/mosquitto_pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 45B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto_rr -&amp;gt; ../Cellar/mosquitto/2.0.10_1/bin/mosquitto_rr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 46B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto_sub -&amp;gt; ../Cellar/mosquitto/2.0.10_1/bin/mosquitto_sub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">➜ ~ ll /usr/local/etc/mosquitto &lt;span class="p">|&lt;/span> grep mosquitto.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">lrwxr-xr-x &lt;span class="m">1&lt;/span> jonathanlin admin 60B Nov &lt;span class="m">25&lt;/span> 11:48 mosquitto.conf -&amp;gt; ../../Cellar/mosquitto/2.0.10_1/etc/mosquitto/mosquitto.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置">配置&lt;/h3>
&lt;p>修改配置文件，显式关闭匿名访问，同时指定账号密码保存路径：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">allow_anonymous &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">password_file /Users/jonathanlin/Workspace/mosquitto/pwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>mosquitto_passwd&lt;/code>创建两个测试账号：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ mosquitto mosquitto_passwd -c ~/Workspace/mosquitto/pwd admin &lt;span class="c1"># 注意密码不要使用特殊字符@&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Reenter password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">➜ mosquitto mosquitto_passwd ~/Workspace/mosquitto/pwd user &lt;span class="c1"># 这里不再需要-c参数，否则是覆盖之前的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Reenter password:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过&lt;code>brew&lt;/code>启动&lt;code>mosquitto&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ mosquitto brew services start &lt;span class="nv">mosquitto&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="o">==&lt;/span>&amp;gt; Successfully started &lt;span class="sb">`&lt;/span>mosquitto&lt;span class="sb">`&lt;/span> &lt;span class="o">(&lt;/span>label: homebrew.mxcl.mosquitto&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者执行二进制文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ ~ /usr/local/sbin/mosquitto -c /usr/local/etc/mosquitto/mosquitto.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>mosquitto_sub&lt;/code>订阅一个主题：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ mosquitto mosquitto_sub -u admin -P &lt;span class="m">1234&lt;/span> -t &lt;span class="s1">&amp;#39;topic-test&amp;#39;&lt;/span> -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>mosquitto_pub&lt;/code>往主题里发送消息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">➜ ~ mosquitto_pub -u admin -P &lt;span class="m">1234&lt;/span> -t &lt;span class="s1">&amp;#39;topic-test&amp;#39;&lt;/span> -m &lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>