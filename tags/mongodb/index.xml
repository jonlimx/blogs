<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mongodb on Standing on the Shoulder of Giants</title><link>https://www.jonathanlin.top/tags/mongodb/</link><description>Recent content in mongodb on Standing on the Shoulder of Giants</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © {year} Jonathan Lin. All rights reserved.</copyright><lastBuildDate>Wed, 17 Nov 2021 10:05:06 +0800</lastBuildDate><atom:link href="https://www.jonathanlin.top/tags/mongodb/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB学习笔记（三）</title><link>https://www.jonathanlin.top/posts/mongo-notes-03/</link><pubDate>Wed, 17 Nov 2021 10:05:06 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mongo-notes-03/</guid><description>
&lt;h2 id="删除文档">删除文档&lt;/h2>
&lt;h3 id="定义">定义&lt;/h3>
&lt;p>删除单个文档：&lt;strong>&lt;code>db.collection.deleteOne()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>删除多个文档：&lt;strong>&lt;code>db.collection.deleteMany()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>语法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>db.collection.deleteOne&lt;span class="o">(&lt;/span>
&lt;span class="ln"> 2&lt;/span> &amp;lt;filter&amp;gt;,
&lt;span class="ln"> 3&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> writeConcern: &amp;lt;document&amp;gt;,
&lt;span class="ln"> 5&lt;/span> collation: &amp;lt;document&amp;gt;,
&lt;span class="ln"> 6&lt;/span> hint: &amp;lt;document&lt;span class="p">|&lt;/span>string&amp;gt; // Available starting in MongoDB 4.4
&lt;span class="ln"> 7&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>db.collection.deleteMany&lt;span class="o">(&lt;/span>
&lt;span class="ln">11&lt;/span> &amp;lt;filter&amp;gt;,
&lt;span class="ln">12&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="ln">13&lt;/span> writeConcern: &amp;lt;document&amp;gt;,
&lt;span class="ln">14&lt;/span> collation: &amp;lt;document&amp;gt;
&lt;span class="ln">15&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>filter&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>匹配条件。如果匹配条件给定&lt;code>{}&lt;/code>，那么删除集合中的第一个文档&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>writeConcern&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定mongod对写操作的响应&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>collation&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定字符串匹配规则&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>hint&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>针对单个文档删除的选项。可选。指定按条件匹配时使用的索引。如果指定了一个不存在的索引则会报错&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>返回值：&lt;/p>
&lt;p>包含下列元素的文档：&lt;/p>
&lt;ul>
&lt;li>&lt;code>acknowledged&lt;/code> - 如果指定了&lt;code>writeConcern&lt;/code>，值为 &lt;code>true&lt;/code> ；如果&lt;code>writeConcern&lt;/code>是disable的，值为&lt;code>false&lt;/code>&lt;/li>
&lt;li>&lt;code>deletedCount&lt;/code> - 删除的文档的个数&lt;/li>
&lt;/ul>
&lt;h3 id="行为">行为&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>db.collection.deleteOne()&lt;/code>删除符合匹配条件的第一个文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无法从大小固定的集合（capped collection）上删除文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>无法从时序集合（time series collections）中删除文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当&lt;code>db.collection.deleteOne()&lt;/code>作用在分片集合上时，匹配条件里必须要包含分片键值或者&lt;code>_id&lt;/code>字段&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果只是删除单个文档，应该使用&lt;code>deleteOne&lt;/code>，而不是使用&lt;code>deleteMany&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>指定&lt;code>collation&lt;/code>的时候必须指定&lt;code>locale&lt;/code>。如果未指定&lt;code>collation&lt;/code>，则使用集合默认的&lt;code>collation&lt;/code>。&lt;code>collation&lt;/code>的格式如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln"> 1&lt;/span>collation: &lt;span class="o">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> locale: &amp;lt;string&amp;gt;,
&lt;span class="ln"> 3&lt;/span> caseLevel: &amp;lt;boolean&amp;gt;,
&lt;span class="ln"> 4&lt;/span> caseFirst: &amp;lt;string&amp;gt;,
&lt;span class="ln"> 5&lt;/span> strength: &amp;lt;int&amp;gt;,
&lt;span class="ln"> 6&lt;/span> numericOrdering: &amp;lt;boolean&amp;gt;,
&lt;span class="ln"> 7&lt;/span> alternate: &amp;lt;string&amp;gt;,
&lt;span class="ln"> 8&lt;/span> maxVariable: &amp;lt;string&amp;gt;,
&lt;span class="ln"> 9&lt;/span> backwards: &amp;lt;boolean&amp;gt;
&lt;span class="ln">10&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="示例">示例&lt;/h3>
&lt;p>给定下面的集合：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;café&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">status&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cafe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">status&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cafE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">status&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>单个删除时指定&lt;code>collation&lt;/code>&lt;/strong>&lt;/p>
&lt;p>下面的语句将删除&lt;code>_id&lt;/code>为1的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">myColl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">deleteOne&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cafe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">status&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">collation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">locale&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;fr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strength&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>多个删除时指定&lt;code>collation&lt;/code>&lt;/strong>&lt;/p>
&lt;p>下面的语句将删除所有的文档。如果&lt;code>collation&lt;/code>中通过&lt;code>caseLevel&lt;/code>指明大小写敏感，这同上就删除第一个文档&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">myColl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">deleteMany&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;cafe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">status&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;A&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">collation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">locale&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;fr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">strength&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="更新文档">更新文档&lt;/h2>
&lt;h3 id="定义-1">定义&lt;/h3>
&lt;p>&lt;strong>&lt;code>db.collection.updateOne(filter, update, options)&lt;/code>&lt;/strong>&lt;/p>
&lt;p>语法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln"> 1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">collection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateOne&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">update&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="nx">upsert&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kr">boolean&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="nx">writeConcern&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="nx">collation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nx">arrayFilters&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">filterdocument1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="nx">hint&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="nx">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="c1">// Available starting in MongoDB 4.2.1
&lt;/span>&lt;span class="ln">10&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>filter&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>匹配条件。如果匹配条件给定&lt;code>{}&lt;/code>，那么更新集合中的第一个文档&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>update&lt;/code>&lt;/td>
&lt;td>文档或者聚合管道&lt;/td>
&lt;td>可以是带有&lt;a href="#%E6%93%8D%E4%BD%9C%E8%A1%A8%E8%BE%BE%E5%BC%8F">更新操作表达式&lt;/a>的文档，或者是聚合管道&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>upsert&lt;/code>&lt;/td>
&lt;td>布尔值&lt;/td>
&lt;td>可选。默认为false，即在没有匹配到文档的时候不会以新的文档插入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>writeConcern&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定mongod对写操作的响应&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>collation&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定字符串匹配规则，和上面提到的删除的操作类似，也是用于扩展匹配规则&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>arrayFilters&lt;/code>&lt;/td>
&lt;td>数组&lt;/td>
&lt;td>可选。用于匹配要更新的文档下的数组元素&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>hint&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>针对单个文档删除的选项。可选。指定按条件匹配时使用的索引。如果指定了一个不存在的索引则会报错&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>返回值：&lt;/p>
&lt;p>包含下列元素的文档：&lt;/p>
&lt;ul>
&lt;li>&lt;code>matchedCount&lt;/code> - 匹配到的文档数&lt;/li>
&lt;li>&lt;code>modifiedCount&lt;/code> - 更新的文档数&lt;/li>
&lt;li>&lt;code>upsertedId&lt;/code> - 新插入的文档的&lt;code>_id&lt;/code>&lt;/li>
&lt;li>&lt;code>acknowledgeed&lt;/code> - 如果指定了&lt;code>writeConcern&lt;/code>，值为 &lt;code>true&lt;/code> ；如果&lt;code>writeConcern&lt;/code>是disable的，值为&lt;code>false&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="操作表达式">操作表达式&lt;/h3>
&lt;p>更新操作表达式由操作符和操作对象组成，具体格式如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">operator1&lt;/span>&lt;span class="o">&amp;gt;:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">field1&lt;/span>&lt;span class="o">&amp;gt;:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">value1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">operator2&lt;/span>&lt;span class="o">&amp;gt;:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">field2&lt;/span>&lt;span class="o">&amp;gt;:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">value2&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意：更新操作符在处理操作对象的时候，不同的版本顺序不一样&lt;/p>
&lt;ul>
&lt;li>MongoDB 5.0以及之后，操作符在处理文档字段的时候，如果是字符串则按照字典顺序，如果是数字类型则按照数字顺序&lt;/li>
&lt;li>MongoDB 4.4以及之前，操作符都是按照字典顺序来处理&lt;/li>
&lt;/ul>
&lt;p>例如，对于下面的操作表达式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="nx">$set&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;a.2&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;a.10&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>MongoDB 5.0以及之后，先处理&lt;code>a.2&lt;/code>再处理&lt;code>a.10&lt;/code>&lt;/li>
&lt;li>MongoDB 4.4以及之前，先处理&lt;code>a.10&lt;/code>再处理&lt;code>a.2&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="字段操作符">字段操作符&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>操作符名称&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>$currentDate&lt;/code>&lt;/td>
&lt;td>将字段的值设置为当前日期时间或者时间戳&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$inc&lt;/code>&lt;/td>
&lt;td>字段的值加上或者减去给定的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$min&lt;/code>&lt;/td>
&lt;td>对字段复制，值为给定的值和当前值较小的那个&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$max&lt;/code>&lt;/td>
&lt;td>对字段复制，值为给定的值和当前值较大的那个&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$mul&lt;/code>&lt;/td>
&lt;td>字段的值乘以给定的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$rename&lt;/code>&lt;/td>
&lt;td>对字段名称重命名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$set&lt;/code>&lt;/td>
&lt;td>对字段赋值。这里是可以替换整个文档，也可以设置文档下某个字段的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$setOnInsert&lt;/code>&lt;/td>
&lt;td>如果更新的时候匹配不到现有文档而发生插入操作的时候，给对应的字段赋值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$unset&lt;/code>&lt;/td>
&lt;td>从文档中删除字段&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="行为-1">行为&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>执行update操作的用户需要有update，find和insert的权限&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>db.collection.updateOne&lt;/code>只更新匹配到的文档里的第一个&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>MongoDB学习笔记（二）</title><link>https://www.jonathanlin.top/posts/mongo-notes-02/</link><pubDate>Tue, 16 Nov 2021 15:03:57 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mongo-notes-02/</guid><description>
&lt;h2 id="单个文档插入操作">单个文档插入操作&lt;/h2>
&lt;h3 id="定义">定义&lt;/h3>
&lt;p>&lt;strong>&lt;code>db.collection.insertOne()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>语法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">collection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertOne&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="nx">writeConcern&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>document&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>待插入集合的文档&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>writeConcern&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定mongod对写操作的响应&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>返回值：&lt;/p>
&lt;p>包含下列元素的文档：&lt;/p>
&lt;ul>
&lt;li>&lt;code>acknowledged&lt;/code> - 如果指定了&lt;code>writeConcern&lt;/code>，值为 &lt;code>true&lt;/code> ；如果&lt;code>writeConcern&lt;/code>是disable的，值为&lt;code>false&lt;/code>&lt;/li>
&lt;li>&lt;code>insertedId&lt;/code> - 主键，也就是&lt;code>_id&lt;/code>的值&lt;/li>
&lt;/ul>
&lt;h3 id="行为">行为&lt;/h3>
&lt;ul>
&lt;li>执行&lt;code>insertOne()&lt;/code>时，&lt;strong>如果集合（表）不存在，那么会自动创建这个集合&lt;/strong>&lt;/li>
&lt;li>如果没有显式地给定&lt;code>_id&lt;/code>的值，那么&lt;code>mongod&lt;/code>或者客户端驱动会自动创建一个，并且值具有唯一性。如果插入的文档的&lt;code>_id&lt;/code>重复，则插入失败&lt;/li>
&lt;li>如果在事务中执行插入，那么不要显式地设置&lt;code>writeConcern&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="示例">示例&lt;/h3>
&lt;p>&lt;strong>插入的时候未指定主键&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertOne&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="nx">print&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="s2">&amp;#34;acknowledged&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="s2">&amp;#34;insertedId&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;56fc40f9d735c28df206d078&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>插入的时候指定主键&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertOne&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果指定的值为10主键&lt;code>_id&lt;/code>已经存在，这时候插入报类似下面的错误：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">11000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="s2">&amp;#34;errmsg&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;E11000 duplicate key error collection: jonlimx_db.products index: _id_ dup key: { _id: 11.0 }&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="s2">&amp;#34;op&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="s2">&amp;#34;qty&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="多个文档插入">多个文档插入&lt;/h2>
&lt;h3 id="定义-1">定义&lt;/h3>
&lt;p>&lt;strong>&lt;code>db.collection.insertMany()&lt;/code>&lt;/strong>&lt;/p>
&lt;p>语法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">collection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertMany&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="nx">writeConcern&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">document&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="nx">ordered&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kr">boolean&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>[ &amp;lt;document 1&amp;gt; , &amp;lt;document 2&amp;gt;, ... ]&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>数组，待插入集合的文档列表&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>writeConcern&lt;/code>&lt;/td>
&lt;td>文档&lt;/td>
&lt;td>可选。用于指定mongod对写操作的响应&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ordered&lt;/code>&lt;/td>
&lt;td>布尔&lt;/td>
&lt;td>可选。指定mongod有序还是无序插入。默认值是&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>返回值：&lt;/p>
&lt;p>包含下列元素的文档：&lt;/p>
&lt;ul>
&lt;li>&lt;code>acknowledged&lt;/code> - 如果指定了&lt;code>writeConcern&lt;/code>，值为 &lt;code>true&lt;/code> ；如果&lt;code>writeConcern&lt;/code>是disable的，值为&lt;code>false&lt;/code>&lt;/li>
&lt;li>&lt;code>insertedIds&lt;/code> - 主键数组，也就是各个文档的&lt;code>_id&lt;/code>的值集合&lt;/li>
&lt;/ul>
&lt;h3 id="行为-1">行为&lt;/h3>
&lt;ul>
&lt;li>执行&lt;code>insertMany()&lt;/code>时，&lt;strong>如果集合（表）不存在，那么会自动创建这个集合&lt;/strong>&lt;/li>
&lt;li>如果没有显式地给定&lt;code>_id&lt;/code>的值，那么&lt;code>mongod&lt;/code>或者客户端驱动会自动创建一个，并且值具有唯一性。如果插入的文档的&lt;code>_id&lt;/code>重复，则插入失败&lt;/li>
&lt;li>默认情况下，&lt;code>mongod&lt;/code>按顺序插入。如果&lt;code>ordered&lt;/code>设为false，那么&lt;code>mongod&lt;/code>将以无序（或者按照性能优化重新排序）的方式插入&lt;/li>
&lt;li>&lt;strong>如果是有序的操作，后一个操作需要等前一个操作完成了再进行&lt;/strong>&lt;/li>
&lt;li>如果有序操作，当前操作发生错误，那么后面的操作则停止；&lt;strong>如果是无序操作，当前操作失败不影响后续操作进行&lt;/strong>&lt;/li>
&lt;li>数据库通过&lt;code>maxWriteBatchSize&lt;/code>控制每组最大的写操作次数，如果&lt;code>insertMany&lt;/code>批量插入的时候超过这个值，一般来说客户端驱动会把该组操作分解成多组&lt;/li>
&lt;/ul>
&lt;h3 id="示例-1">示例&lt;/h3>
&lt;p>&lt;strong>插入的时候未指定主键&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertMany&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;envelope&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;stamps&amp;#34;&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">8&lt;/span> &lt;span class="nx">print&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">9&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="s2">&amp;#34;acknowledged&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="s2">&amp;#34;insertedIds&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eea&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eeb&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eec&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="ln">7&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="ln">8&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>插入的时候指定重复主键&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertMany&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eea&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;envelope&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;stamps&amp;#34;&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于键值为&lt;code>61937128eae4d2a457051eea&lt;/code>的文档已经存在，导致该文档插入失败；又因为&lt;code>ordered&lt;/code>默认值为&lt;code>true&lt;/code>，后续的插入操作停止&lt;/p>
&lt;p>返回值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="s2">&amp;#34;writeErrors&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">11000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="s2">&amp;#34;errmsg&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;E11000 duplicate key error collection: jonlimx_db.products index: _id_ dup key: { _id: ObjectId(&amp;#39;61937128eae4d2a457051eea&amp;#39;) }&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="s2">&amp;#34;op&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eea&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="s2">&amp;#34;qty&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="s2">&amp;#34;writeConcernErrors&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="s2">&amp;#34;nInserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="s2">&amp;#34;nUpserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="s2">&amp;#34;nMatched&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="s2">&amp;#34;nModified&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="s2">&amp;#34;nRemoved&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="s2">&amp;#34;upserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="ln">21&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>插入的时候指定重复主键且ordered=false&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln">1&lt;/span>&lt;span class="nx">db&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">insertMany&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eea&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;envelope&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;stamps&amp;#34;&lt;/span> &lt;span class="p">,&lt;/span> &lt;span class="nx">qty&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">,&lt;/span>
&lt;span class="ln">6&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">ordered&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回值 - 第一条插入失败，后面两条插入成功&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="s2">&amp;#34;writeErrors&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="s2">&amp;#34;index&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">11000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="s2">&amp;#34;errmsg&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;E11000 duplicate key error collection: jonlimx_db.products index: _id_ dup key: { _id: ObjectId(&amp;#39;61937128eae4d2a457051eea&amp;#39;) }&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="s2">&amp;#34;op&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="s2">&amp;#34;_id&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">ObjectId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;61937128eae4d2a457051eea&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="s2">&amp;#34;item&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;card&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="s2">&amp;#34;qty&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="s2">&amp;#34;writeConcernErrors&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="s2">&amp;#34;nInserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="s2">&amp;#34;nUpserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="s2">&amp;#34;nMatched&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">18&lt;/span> &lt;span class="s2">&amp;#34;nModified&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">19&lt;/span> &lt;span class="s2">&amp;#34;nRemoved&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">20&lt;/span> &lt;span class="s2">&amp;#34;upserted&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="ln">21&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>MongoDB学习笔记（一）</title><link>https://www.jonathanlin.top/posts/mongo-notes-01/</link><pubDate>Thu, 05 Aug 2021 13:48:47 +0800</pubDate><guid>https://www.jonathanlin.top/posts/mongo-notes-01/</guid><description>
&lt;h2 id="安装mongodb">安装mongodb&lt;/h2>
&lt;p>我使用的是macOS bigsur，因此这里记录的是在mac下安装mongodb社区版。在mac下最便捷的安装方式就是使用&lt;code>brew&lt;/code>来安装，使用以下命令：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>添加官方tap&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>brew tap mongodb/brew
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>安装mongo全家桶，包括社区版服务端，Shell和数据库相关工具&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>brew install mongodb-community
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>安装完成后，对应的二进制文件和配置文件的位置如下：（Intel处理器）&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>文件&lt;/th>
&lt;th>位置&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>二进制可执行文件&lt;/td>
&lt;td>/usr/local/Cellar/mongodb-community/5.0.1/bin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>配置文件&lt;/td>
&lt;td>/usr/local/etc/mongod.conf&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>日志文件&lt;/td>
&lt;td>/usr/local/var/log/mongodb&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>数据文件&lt;/td>
&lt;td>/usr/local/var/mongodb&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>MongoDB官方提供了以供学习用的示例数据集合，可以从https://atlas-education.s3.amazonaws.com/sampledata.archive下载，关于示例数据集的详细信息，可以参考：&lt;a href="https://www.mongodb.com/developer/article/atlas-sample-datasets/#std-label-atlas-sample-data-local-installation">The MongoDB Atlas Sample Datasets&lt;/a>。&lt;/p>
&lt;h2 id="以服务的方式启动停止mongodb">以服务的方式启动/停止mongodb&lt;/h2>
&lt;p>启动mongodb服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>brew services start mongodb-community@5.0
&lt;/code>&lt;/pre>&lt;/div>&lt;p>服务启动后，可以通过&lt;code>mongo&lt;/code>命令连接并进入shell。&lt;/p>
&lt;p>停止mongodb服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>brew services stop mongodb-community@5.0
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mongodb查询操作">mongodb查询操作&lt;/h2>
&lt;p>这里介绍的关于mongodb的查询操作（&lt;strong>MQL&lt;/strong>）是通过&lt;code>mongosh&lt;/code>方法来实现的，这些方法底层是基于&lt;code>JavaScript&lt;/code>，但是如果你使用&lt;code>JavaScript&lt;/code>来连接那么你应该参考相应语言的包（&lt;a href="https://docs.mongodb.com/drivers/">idiomatic driver&lt;/a> ）。关于新增、删除和更新的方法可以查看文档：&lt;a href="https://docs.mongodb.com/manual/reference/method/">mongosh Methods — MongoDB Manual&lt;/a>。这里记录一下查找方法的使用。&lt;/p>
&lt;h3 id="方法定义">方法定义&lt;/h3>
&lt;p>方法定义：&lt;code>db.collection.find(query, projection)&lt;/code>&lt;/p>
&lt;p>参数列表如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>参数&lt;/th>
&lt;th>参数类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>query&lt;/td>
&lt;td>document&lt;/td>
&lt;td>可选参数。使用&lt;a href="#%E6%9F%A5%E8%AF%A2%E9%80%89%E6%8B%A9%E5%99%A8">查询选择器&lt;/a>构建查询条件。如果你希望返回集合里的所有文档，那么忽略这个参数，或者传递一个空的文档(&lt;code>{}&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>projecttion&lt;/td>
&lt;td>document&lt;/td>
&lt;td>可选参数。对查询结果进行筛选，选择性的返回指定的字段而不是包含文档里的所有字段。如果希望返回文档里的所有字段，则忽略该参数。关于更多细节，请参看：&lt;a href="#Projection%E6%8A%95%E5%BD%B1">Projection(投影)&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>构建query的时候，会涉及到字段或者嵌套字段。所谓嵌套字段是指子文档里的字段。指定嵌套的字段的方式有两种：&lt;/p>
&lt;ul>
&lt;li>点标记法：&lt;code>&amp;quot;field.nestedfield&amp;quot;: &amp;lt;value&amp;gt;&lt;/code>&lt;/li>
&lt;li>嵌套的方式：&lt;code>{ field: { nestedfield: &amp;lt;value&amp;gt; } }&lt;/code> （**注意：**这种方式和点标记法不一样，这种方式将匹配名称为&lt;code>filed&lt;/code>的子文档，子文档只包含一个名为&lt;code>nestedfield&lt;/code>的字段）&lt;/li>
&lt;/ul>
&lt;h3 id="查询选择器">查询选择器&lt;/h3>
&lt;p>这部分官网有很好的解释说明，详见：&lt;a href="https://docs.mongodb.com/manual/reference/operator/query/#query-selectors">Query and Projection Operators — MongoDB Manual&lt;/a>&lt;/p>
&lt;h4 id="比较">比较&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>数学运算符（SQL）&lt;/th>
&lt;th>MQL运算符&lt;/th>
&lt;th>语法说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>=&lt;/td>
&lt;td>$eq&lt;/td>
&lt;td>&lt;code>{ &amp;lt;field&amp;gt;: { $eq: &amp;lt;value&amp;gt; } }&lt;/code> 如果&lt;code>value&lt;/code>不是正则表达式，也可以写成&lt;code>{ field: &amp;lt;value&amp;gt; }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;gt;&lt;/td>
&lt;td>$gt&lt;/td>
&lt;td>&lt;code>{field: {$gt: value} }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;gt;=&lt;/td>
&lt;td>$gte&lt;/td>
&lt;td>&lt;code>{field: {$gte: value} }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>in&lt;/td>
&lt;td>$in&lt;/td>
&lt;td>&lt;code>{ field: { $in: [&amp;lt;value1&amp;gt;, &amp;lt;value2&amp;gt;, ... &amp;lt;valueN&amp;gt; ] } }&lt;/code> 字段的值&lt;strong>在&lt;/strong>给定的数组里&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;&lt;/td>
&lt;td>$lt&lt;/td>
&lt;td>&lt;code>{field: {$lt: value} }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;=&lt;/td>
&lt;td>$lte&lt;/td>
&lt;td>&lt;code>{ field: { $lte: value} }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>!=&lt;/td>
&lt;td>$ne&lt;/td>
&lt;td>&lt;code>{field: {$ne: value} }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>not in&lt;/td>
&lt;td>$nin&lt;/td>
&lt;td>&lt;code>{ field: { $nin: [ &amp;lt;value1&amp;gt;, &amp;lt;value2&amp;gt; ... &amp;lt;valueN&amp;gt; ]} }&lt;/code>字段的值&lt;strong>不在&lt;/strong>给定的数组里&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>注意：&lt;/strong> 在进行比较的时候，比较操作符两边的数据需要是相同的BSON类型（&lt;a href="https://docs.mongodb.com/manual/reference/bson-type-comparison-order/#std-label-bson-types-comparison-order">Comparison/Sort Order — MongoDB Manual&lt;/a>）&lt;/p>
&lt;p>对于同一个字段的范围的判断，可以使用下面提到的&lt;code>$and&lt;/code>逻辑运算，也可以简单的放在一起：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>birth: &lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1940-01-01&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="nv">$lt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1960-01-01&amp;#34;&lt;/span>&lt;span class="o">)}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>&lt;span class="nv">$and&lt;/span>:&lt;span class="o">[{&lt;/span>birth:&lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1940-01-01&amp;#34;&lt;/span>&lt;span class="o">)}}&lt;/span>,&lt;span class="o">{&lt;/span>birth:&lt;span class="o">{&lt;/span>&lt;span class="nv">$lt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1960-01-01&amp;#34;&lt;/span>&lt;span class="o">)}}]})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="逻辑运算">逻辑运算&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MQL运算符&lt;/th>
&lt;th>语法说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$and&lt;/td>
&lt;td>&lt;code>{ $and: [ { &amp;lt;expression1&amp;gt; }, { &amp;lt;expression2&amp;gt; } , ... , { &amp;lt;expressionN&amp;gt; } ] }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$not&lt;/td>
&lt;td>&lt;code>{ field: { $not: { &amp;lt;operator-expression&amp;gt; } } }&lt;/code>注意&lt;code>{ $not: { $gt: 1.99 } }&lt;/code>和&lt;code>{ $lte: 1.99 }&lt;/code>不一样，&lt;strong>如果字段不存在，前者会匹配到，但是后者得存在才能匹配到&lt;/strong>。原因是前者不大于1.99包括小于等于1.99，也包括不存在的，后者明确就是小于等于1.99&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$nor&lt;/td>
&lt;td>&lt;code>{ $nor: [ { &amp;lt;expression1&amp;gt; }, { &amp;lt;expression2&amp;gt; }, ... { &amp;lt;expressionN&amp;gt; } ] }&lt;/code>匹配表达式列列表都不满足情况，&lt;strong>如果表达式中涉及到的所有字段都不存在，也会匹配出来&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$or&lt;/td>
&lt;td>&lt;code>{ $or: [ { &amp;lt;expression1&amp;gt; }, { &amp;lt;expression2&amp;gt; }, ... , { &amp;lt;expressionN&amp;gt; } ] }&lt;/code>匹配表达式列表中的一个或者多个&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>$not&lt;/code>用于修饰数学符号来实现不大于、不小于诸如此类，而&lt;code>$and&lt;/code> &lt;code>$not&lt;/code> &lt;code>$nor&lt;/code>是用于逻辑表达式之间的运算(逻辑表达式由字段和数学表达式构成)，这里要区分开。&lt;/p>
&lt;h4 id="元素element">元素（Element）&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MQL运算符&lt;/th>
&lt;th>语法说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$exists&lt;/td>
&lt;td>&lt;code>{ field: { $exists: &amp;lt;boolean&amp;gt; } }&lt;/code>匹配某个字段是否存在。如果值是&lt;code>true&lt;/code>那么会匹配到字段存在的或者值为&lt;code>null&lt;/code>的&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$type&lt;/td>
&lt;td>&lt;code>{ field: { $type: &amp;lt;BSON type&amp;gt; } }&lt;/code>或者&lt;code>{ field: { $type: [ &amp;lt;BSON type1&amp;gt; , &amp;lt;BSON type2&amp;gt;, ... ] } }&lt;/code>根据字段的类型匹配，可以匹配某种特定类型，或者几种类型中的一种。&lt;code>BSON&lt;/code>的支持的类型：&lt;a href="https://docs.mongodb.com/manual/reference/operator/query/type/#std-label-document-type-available-types">$type — MongoDB Manual&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="评估evaluation">评估（Evaluation）&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MQL运算符&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$expr&lt;/td>
&lt;td>在query中使用复杂表达式来查询文档 &lt;a href="https://docs.mongodb.com/manual/reference/operator/query/expr/">$expr — MongoDB Manual&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$jsonSchema&lt;/td>
&lt;td>校验文档的schema&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$mod&lt;/td>
&lt;td>取模运算&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$regex&lt;/td>
&lt;td>使用正则表达式来匹配 &lt;a href="https://docs.mongodb.com/manual/reference/operator/query/regex/">$regex — MongoDB Manual&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$text&lt;/td>
&lt;td>使用文本搜索来匹配字段，前提是这个字段上有text索引&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$where&lt;/td>
&lt;td>使用自定义的JS表达式或者方法进行匹配&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="数组array">数组（Array)&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MQL运算符&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$all&lt;/td>
&lt;td>通过文档数组里的元素进行匹配，数组元素需要满足$all中定义的所有条件。类似$and&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$elemMatch&lt;/td>
&lt;td>通过文档数组里的元素进行匹配，数组元素中的一个或者多个需要满足条件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$size&lt;/td>
&lt;td>通过文档数组元素的个数进行匹配&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="projection投影">Projection(投影)&lt;/h3>
&lt;p>投影的目的是将query的结果按要求返回，比如需要返回哪些字段、返回几个符合条件的数组元素。&lt;strong>注意&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>包含或者排除，&lt;strong>这二者在投影里是互斥的&lt;/strong>。即指定了包含的字段，那么结果仅返回指定的字段，如果指定了排除的字段，那么返回的结果不包含被排除的字段&lt;/li>
&lt;li>&lt;code>_id&lt;/code>是特例，默认是包含在返回结果里，如果不希望结果里返回，是需要在投影里排除掉。&lt;code>_id&lt;/code>的排除是可以和其他字段的包含同时存在&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Projection&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;lt;field&amp;gt;: &amp;lt;1 or true&amp;gt;&lt;/code>&lt;/td>
&lt;td>结果中包含某个字段。只要是非0的整型数字，都会被当成&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;field&amp;gt;: &amp;lt;0 or false&amp;gt;&lt;/code>&lt;/td>
&lt;td>结果中&lt;strong>排除&lt;/strong>某个字段&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;field&amp;gt;: &amp;lt;aggregation expression&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;em>TODO - 待补充&lt;/em>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>关于对于数组的投影，参考以下操作符：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>MQL运算符&lt;/th>
&lt;th>语法说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$&lt;/td>
&lt;td>&lt;code>db.collection.find( { &amp;lt;array&amp;gt;: &amp;lt;condition&amp;gt; ... },{ &amp;quot;&amp;lt;array&amp;gt;.$&amp;quot;: 1 } )&lt;/code> &lt;code>db.collection.find( { &amp;lt;array.field&amp;gt;: &amp;lt;condition&amp;gt; ...}, { &amp;quot;&amp;lt;array&amp;gt;.$&amp;quot;: 1 } )&lt;/code> 查找条件是基于文档内部的数组元素，通过&lt;code>$&lt;/code>投影出符合条件的第一个数组元素&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$elemMatch&lt;/td>
&lt;td>与&lt;code>$&lt;/code>类似，投影出符合条件的第一个数组元素。&lt;code>$elemMatch&lt;/code>是在query的结果上，对数组元组的一个或者多个进行继续过滤：&lt;code>db.collection.find( { query, array: {$elemMatch: {condition ...}} ... }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$meta&lt;/td>
&lt;td>获取文档相关的元数据，包括&lt;code>textScore&lt;/code>和&lt;code>indexKey&lt;/code>。&lt;code>textScore&lt;/code>和query中的&lt;code>text&lt;/code>一起使用，表示文档和query的匹配程度；&lt;code>indexKey&lt;/code>顾名思义获取文档对应的非text类型的索引键，主要用于调试目的（??）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$slice&lt;/td>
&lt;td>返回符合query条件的数组元素的切片。&lt;code>db.collection.find(&amp;lt;query&amp;gt;,{ &amp;lt;arrayField&amp;gt;: { $slice: &amp;lt;number&amp;gt; } });&lt;/code>或者&lt;code>db.collection.find(&amp;lt;query&amp;gt;,{ &amp;lt;arrayField&amp;gt;: { $slice: [ &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt; ] } });&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="查询示例">查询示例&lt;/h2>
&lt;p>这个部分的数据来源是官方&lt;code>bios&lt;/code>数据集：&lt;a href="https://docs.mongodb.com/manual/reference/bios-example-collection/">The bios Example Collection — MongoDB Manual&lt;/a>&lt;/p>
&lt;p>&lt;strong>查询所有文档&lt;/strong>&lt;/p>
&lt;p>&lt;code>find()&lt;/code>方法的query部分不传值，或者传递一个空的文档，那么返回的接口就是所有文档。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>按照特定的值查询&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查找&lt;code>_id&lt;/code>为5的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>_id: 5&lt;span class="o">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>name&lt;/code>子文档里&lt;code>last&lt;/code>的值为&amp;quot;Hopper&amp;quot;的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>&lt;span class="s2">&amp;#34;name.last&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Hopper&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>使用&lt;a href="#%E6%9F%A5%E8%AF%A2%E9%80%89%E6%8B%A9%E5%99%A8%5D">查询选择器&lt;/a>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查找&lt;code>_id&lt;/code>的值等于5或者等于&lt;code>ObjectId(&amp;quot;51e062189c6ae665454e301d&amp;quot;)&lt;/code>的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>_id: &lt;span class="o">{&lt;/span>&lt;span class="nv">$in&lt;/span>: &lt;span class="o">[&lt;/span>5, ObjectId&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;51e062189c6ae665454e301d&amp;#34;&lt;/span>&lt;span class="o">)]}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>birth&lt;/code>在1950之后的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>birth: &lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1950-01-01&amp;#34;&lt;/span>&lt;span class="o">)}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用正则表达式查找&lt;code>name&lt;/code>子文档下&lt;code>last&lt;/code>以N开头的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;name.last&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span> &lt;span class="nv">$regex&lt;/span>: /^N/ &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;code>$regex&lt;/code>的语法格式如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>&lt;span class="o">{&lt;/span> &amp;lt;field&amp;gt;: &lt;span class="o">{&lt;/span> &lt;span class="nv">$regex&lt;/span>: /pattern/, &lt;span class="nv">$options&lt;/span>: &lt;span class="s1">&amp;#39;&amp;lt;options&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="o">{&lt;/span> &amp;lt;field&amp;gt;: &lt;span class="o">{&lt;/span> &lt;span class="nv">$regex&lt;/span>: &lt;span class="s1">&amp;#39;pattern&amp;#39;&lt;/span>, &lt;span class="nv">$options&lt;/span>: &lt;span class="s1">&amp;#39;&amp;lt;options&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="o">{&lt;/span> &amp;lt;field&amp;gt;: &lt;span class="o">{&lt;/span> &lt;span class="nv">$regex&lt;/span>: /pattern/&amp;lt;options&amp;gt; &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>按照值范围查询&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>birth&lt;/code>在1940和1960之间的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>birth: &lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1940-01-01&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>, &lt;span class="nv">$lt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1960-01-01&amp;#34;&lt;/span>&lt;span class="o">)}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>根据多个条件查询&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>birth&lt;/code>在1920之后，且&lt;code>death&lt;/code>为false的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="ln">2&lt;/span> birth: &lt;span class="o">{&lt;/span> &lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;1920-01-01&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}&lt;/span>,
&lt;span class="ln">3&lt;/span> death: &lt;span class="o">{&lt;/span> &lt;span class="nv">$exists&lt;/span>: &lt;span class="nb">false&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者使用&lt;code>$and&lt;/code>操作符&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>&lt;span class="nv">$and&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span>birth: &lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: new Date&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;1920-01-01&amp;#34;&lt;/span>&lt;span class="o">)}}&lt;/span>,
&lt;span class="ln">3&lt;/span> &lt;span class="o">{&lt;/span>death: &lt;span class="o">{&lt;/span>&lt;span class="nv">$exists&lt;/span>: false&lt;span class="o">}}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="o">]})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>精确匹配子文档&lt;/strong>&lt;/p>
&lt;p>所谓精确匹配是指&lt;strong>要求子文档的字段的个数以及字段顺序与给定的查询条件中的子文档一致&lt;/strong>。下面的例子中，要求匹配&lt;code>name&lt;/code>子文档的&lt;code>first&lt;/code>为Yukihiro，&lt;code>last&lt;/code>为Matsumoto，文档中这两个字段的顺序也是要匹配上&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> name: &lt;span class="o">{&lt;/span> first: &lt;span class="s2">&amp;#34;Yukihiro&amp;#34;&lt;/span>, last: &lt;span class="s2">&amp;#34;Matsumoto&amp;#34;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的两种情况无法匹配成功：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="ln"> 1&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="nt">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Yukihiro&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="nt">&amp;#34;aka&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Matz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="nt">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Matsumoto&amp;#34;&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln"> 6&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nt">&amp;#34;last&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Matsumoto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="nt">&amp;#34;first&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Yukihiro&amp;#34;&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>匹配子文档的字段&lt;/strong>&lt;/p>
&lt;p>使用点标记法匹配子文档字段。例如查找&lt;code>name&lt;/code>子文档下&lt;code>first&lt;/code>为Yukihiro且&lt;code>last&lt;/code>为Matsumoto的文档&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="s2">&amp;#34;name.first&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Yukihiro&amp;#34;&lt;/span>,
&lt;span class="ln">4&lt;/span> &lt;span class="s2">&amp;#34;name.last&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Matsumoto&amp;#34;&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>根据数组元素(数组元素类型为简单类型)来查找&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查找&lt;code>contribs&lt;/code>数组里含有&lt;code>UNIX&lt;/code>元素的文档（至少有一个元素符合即可）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>contribs: &lt;span class="s2">&amp;#34;UNIX&amp;#34;&lt;/span>&lt;span class="o">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>contribs&lt;/code>数组里含有&lt;code>ALGOL&lt;/code>或者&lt;code>Lisp&lt;/code>元素的文档（至少有一个元素在$in列表里）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>contribs: &lt;span class="o">{&lt;/span>&lt;span class="nv">$in&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;ALGOL&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;Lisp&amp;#34;&lt;/span>&lt;span class="o">]}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>contribs&lt;/code>数组里含有&lt;code>ALGOL&lt;/code>和&lt;code>Lisp&lt;/code>元素的文档（&lt;strong>至少包含&lt;/strong>$all里定义的所有元素）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>contribs: &lt;span class="o">{&lt;/span>&lt;span class="nv">$all&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;ALGOL&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;Lisp&amp;#34;&lt;/span>&lt;span class="o">]}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>contribs&lt;/code>数组大小为4的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">({&lt;/span>contribs: &lt;span class="o">{&lt;/span>&lt;span class="nv">$size&lt;/span>: 4&lt;span class="o">}})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>根据数组元素(数组元素类型为文档类型)来查找&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查找&lt;code>awards&lt;/code>数组下的子文档中的&lt;code>award&lt;/code>的值为&lt;code>Turing Award&lt;/code>的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="s2">&amp;#34;awards.award&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Turing Award&amp;#34;&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找&lt;code>awards&lt;/code>数组元素中&lt;code>award&lt;/code>的值为&lt;code>Turing Award&lt;/code>且&lt;code>year&lt;/code>(这里必须要在一个数组元素同时满足)大于1999的文档：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> awards: &lt;span class="o">{&lt;/span> &lt;span class="nv">$elemMatch&lt;/span>: &lt;span class="o">{&lt;/span> award: &lt;span class="s2">&amp;#34;Turing Award&amp;#34;&lt;/span>, year: &lt;span class="o">{&lt;/span> &lt;span class="nv">$gt&lt;/span>: &lt;span class="m">2000&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的查询可以匹配：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="ln"> 1&lt;/span>&lt;span class="s2">&amp;#34;awards&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Rosing Prize&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1999&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Norwegian Data Association&amp;#34;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Turing Award&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2001&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ACM&amp;#34;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;IEEE John von Neumann Medal&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2001&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;IEEE&amp;#34;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>但是无法匹配：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="ln"> 1&lt;/span>&lt;span class="s2">&amp;#34;awards&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="ln"> 2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 3&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Turing Award&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 4&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1983&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 5&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ACM&amp;#34;&lt;/span>
&lt;span class="ln"> 6&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln"> 7&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln"> 8&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;National Medal of Technology&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln"> 9&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1998&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">10&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;United States&amp;#34;&lt;/span>
&lt;span class="ln">11&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="ln">12&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="ln">13&lt;/span> &lt;span class="nt">&amp;#34;award&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Japan Prize&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">14&lt;/span> &lt;span class="nt">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2011&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="ln">15&lt;/span> &lt;span class="nt">&amp;#34;by&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;The Japan Prize Foundation&amp;#34;&lt;/span>
&lt;span class="ln">16&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="ln">17&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果这里不使用&lt;code>elemMatch&lt;/code>而是使用下面的方式，结果返回的是&lt;code>awards&lt;/code>元素里包含&lt;code>award&lt;/code>为”Turing Award“和&lt;code>year&lt;/code>大于1975的元素。这两个条件是要求&lt;code>awards&lt;/code>下的所有元素里，满足这两个条件即可。这两个条件是限制在&lt;code>awards&lt;/code>上，不是限制在单一的数组元素上，因此上面无法匹配的例子也可以被下面的查询匹配。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="s2">&amp;#34;awards.award&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Turing Award&amp;#34;&lt;/span> ,
&lt;span class="ln">4&lt;/span> &lt;span class="s2">&amp;#34;awards.year&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>&lt;span class="nv">$gt&lt;/span>: 1975&lt;span class="o">}&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">6&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="投影示例">投影示例&lt;/h2>
&lt;p>&lt;strong>指定要包含的字段&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>bios&lt;/code>集合里所有文档并返回文档的&lt;code>name&lt;/code>和&lt;code>contribs&lt;/code>字段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">}&lt;/span>, &lt;span class="o">{&lt;/span> name: 1, contribs: &lt;span class="m">1&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>指定要排除的字段&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>bios&lt;/code>集合里&lt;code>contribs&lt;/code>为OOP的集合，返回的时候排除掉&lt;code>name.first&lt;/code>和&lt;code>birth&lt;/code>字段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> contribs: &lt;span class="s1">&amp;#39;OOP&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span>,
&lt;span class="ln">3&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="s1">&amp;#39;name.first&amp;#39;&lt;/span>: 0, birth: &lt;span class="m">0&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>显式排除&lt;code>_id&lt;/code>字段&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>bios&lt;/code>集合里所有文档并返回文档的&lt;code>name&lt;/code>和&lt;code>contribs&lt;/code>字段但不包括&lt;code>_id&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">}&lt;/span>,
&lt;span class="ln">3&lt;/span> &lt;span class="o">{&lt;/span> name: 1, contribs: 1, _id: &lt;span class="m">0&lt;/span> &lt;span class="o">}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>对子文档和数组投影&lt;/strong>&lt;/p>
&lt;p>查找&lt;code>bios&lt;/code>集合里的所有文档并返回&lt;code>name.last&lt;/code>，以及&lt;code>contribs&lt;/code>数组里的前两个元素&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="ln">1&lt;/span>db.bios.find&lt;span class="o">(&lt;/span>
&lt;span class="ln">2&lt;/span> &lt;span class="o">{}&lt;/span>,
&lt;span class="ln">3&lt;/span> &lt;span class="o">{&lt;/span>_id: 0, &lt;span class="s1">&amp;#39;name.last&amp;#39;&lt;/span>: 1, contribs: &lt;span class="o">{&lt;/span>&lt;span class="nv">$slice&lt;/span>: 2&lt;span class="o">}}&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>